worker_processes 1; # change depending on the number of cores on your server
pid /var/run/nginx.pid; # location of pid, if you need to terminate, etc

#error_log logs/error.log;
#error_log logs/error.log notice;
#error_log logs/error.log info;

events {
	worker_connections 1024;
	accept_mutex off; # set on for more than 1 worker process
}

http {
	include /etc/nginx/mime.types;
	default_type application/octet-stream;
	sendfile on;
	tcp_nopush on;
    	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	gzip on;
  	gzip_http_version 1.0;
  	gzip_proxied any;
  	gzip_min_length 500;
  	gzip_disable "MSIE [1-6]\.";

	server_tokens off; # prevents nginx from telling the client what version it is running
	
	# handles upgrading to websockets, if available. If not, closes connection.
	map $http_upgrade $connection_upgrade {
		default upgrade;
		'' close;
	}

	server {
		listen 80;

		# replace domain names here
		server_name www.example1.com example1.com;
		access_log /var/log/nginx/www.example1.com.log;

		# redirects the user if the browser 
		if ($http_user_agent ~ "MSIE") {
			return 303 https://browser-update.org/update.html;
		}

		location / {
			# passes responses and requests of app on port 3000 to nginx on port 80. 
			# Be sure to clear browser cache in case of CSS styling not showing or JS 
			# scripts not running since nginx may detect the static files and not update accordingly.
			proxy_pass http://127.0.0.1:3000;

			# all the options below are for upgrading connection to allow for websockets
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $connection_upgrade;
			proxy_set_header X-Forwarded-For $remote_addr;

			# set all resources to expire from cache after 30 days
			if ($uri != '/') {
				expires 30d;
			}
		}
	}

	# copies of the first server block. Used for virtual hosting. 
	server {
		listen 80;

		server_name www.example2.com example2.com;
		access_log /var/log/nginx/www.example2.com.log;

		if ($http_user_agent ~ "MSIE") {
			return 303 https://browser-update.org/update.html;
		}

		location / {
			proxy_pass http://127.0.0.1:3001;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $connection_upgrade;
			proxy_set_header X-Forwarded-For $remote_addr;

			if ($uri != '/') {
				expires 30d;
			}
		}
	}

	server {
		listen 80;
		server_name www.example3.com example3.com;
		access_log /var/log/nginx/www.example3.com.log;

		if ($http_user_agent ~ "MSIE") {
			return 303 https://browser-update.org/update.html;
		}

		location / {
			proxy_pass http://127.0.0.1:3002;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $connection_upgrade;
			proxy_set_header X-Forwarded-For $remote_addr;

			if ($uri != '/') {
				expires 30d;
			}
		}
	}
}
